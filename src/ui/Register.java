/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import bd.Query;
import java.sql.SQLException;
import java.text.Normalizer;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import ticketsystem.User;
import ticketsystem.UserType;

/**
 *
 * @author izar
 */
public class Register extends javax.swing.JFrame {

    boolean autoID_checkbox_pressed = false;
    boolean clearedName = false;
    boolean clearedSurname = false;
    boolean clearedID = false;
    boolean clearedPass = false;
    boolean clearedPassConfirm = false;
    boolean clearedYear = false;

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
        this.setLocationRelativeTo(null);   // Pon al centro de la pantalla
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.requestFocus();
        this.alert_icon.setVisible(false);

        this.ID_tf.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                checkID();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkID();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                checkID();
            }

            public void checkID() {
                Query q = new Query();
                try {
                    int parsedID = Integer.parseInt(ID_tf.getText());

                    alert_icon.setVisible(q.userExists(parsedID));
                } catch (NumberFormatException | SQLException ex) {
                    alert_icon.setVisible(false);
                } finally {
                    q.close();
                }

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        name_tf = new javax.swing.JTextField();
        password_label = new javax.swing.JLabel();
        surname_tf = new javax.swing.JTextField();
        surname_label = new javax.swing.JLabel();
        birthdate_label = new javax.swing.JLabel();
        year_tf = new javax.swing.JTextField();
        day_label = new javax.swing.JLabel();
        month_label = new javax.swing.JLabel();
        year_label = new javax.swing.JLabel();
        autoID_checkbox = new javax.swing.JCheckBox();
        ID_label = new javax.swing.JLabel();
        ID_tf = new javax.swing.JTextField();
        password_tf = new javax.swing.JPasswordField();
        name_label1 = new javax.swing.JLabel();
        passConfirm_label = new javax.swing.JLabel();
        passConfirm_tf = new javax.swing.JPasswordField();
        accountType_label = new javax.swing.JLabel();
        cancel_btn = new javax.swing.JButton();
        confirm_btn = new javax.swing.JButton();
        alert_icon = new javax.swing.JLabel();
        day_cb = new javax.swing.JComboBox<>();
        month_cb = new javax.swing.JComboBox<>();
        accountType_cb = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        name_tf.setText("Nombre");
        name_tf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                name_tfMouseClicked(evt);
            }
        });
        name_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_tfActionPerformed(evt);
            }
        });

        password_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        password_label.setText("Password");

        surname_tf.setText("Apellidos");
        surname_tf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                surname_tfMouseClicked(evt);
            }
        });

        surname_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        surname_label.setText("Apellido(s)");

        birthdate_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        birthdate_label.setText("Fecha de nacimiento");

        year_tf.setText("1900");
        year_tf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                year_tfMouseClicked(evt);
            }
        });

        day_label.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        day_label.setText("Día");

        month_label.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        month_label.setText("Mes");

        year_label.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        year_label.setText("Año");

        autoID_checkbox.setText("Genera autom. ID");
        autoID_checkbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                autoID_checkboxItemStateChanged(evt);
            }
        });

        ID_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ID_label.setText("ID");

        ID_tf.setText("ID");
        ID_tf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ID_tfMouseClicked(evt);
            }
        });
        ID_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ID_tfActionPerformed(evt);
            }
        });

        password_tf.setText("jPasswordField1");
        password_tf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                password_tfMouseClicked(evt);
            }
        });

        name_label1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        name_label1.setText("Nombre");

        passConfirm_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        passConfirm_label.setText("Confirmar Password");

        passConfirm_tf.setText("jPasswordField1");
        passConfirm_tf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passConfirm_tfMouseClicked(evt);
            }
        });

        accountType_label.setText("Tipo de Cuenta");

        cancel_btn.setText("Cancelar");
        cancel_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_btnActionPerformed(evt);
            }
        });

        confirm_btn.setText("Confirmar");
        confirm_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirm_btnActionPerformed(evt);
            }
        });

        alert_icon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        alert_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/alert.png"))); // NOI18N
        alert_icon.setToolTipText("¡Este ID ya está en uso!");

        day_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        day_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                day_cbActionPerformed(evt);
            }
        });

        month_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        accountType_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Técnico", "Usuario" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(surname_tf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name_tf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(surname_label, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cancel_btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(confirm_btn))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(accountType_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(accountType_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(password_tf, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                    .addComponent(password_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passConfirm_tf, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                    .addComponent(passConfirm_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(autoID_checkbox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ID_tf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(day_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(day_label, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(month_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(month_label, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(year_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(year_label, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(name_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(birthdate_label, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ID_label, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alert_icon)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password_label)
                    .addComponent(name_label1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(surname_label)
                    .addComponent(passConfirm_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(surname_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passConfirm_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(birthdate_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(day_label)
                            .addComponent(month_label)
                            .addComponent(year_label))
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(accountType_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(day_cb)
                    .addComponent(accountType_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(year_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(month_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(autoID_checkbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ID_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancel_btn)
                        .addComponent(confirm_btn))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(alert_icon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ID_tf, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 544, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 12, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 12, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ID_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ID_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ID_tfActionPerformed

    private void name_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_tfActionPerformed

    private void day_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_day_cbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_day_cbActionPerformed

    private void autoID_checkboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_autoID_checkboxItemStateChanged
        // Guarda estado actual de la variable
        autoID_checkbox_pressed = !autoID_checkbox_pressed;
        this.ID_tf.setEnabled(!autoID_checkbox_pressed);
    }//GEN-LAST:event_autoID_checkboxItemStateChanged

    private void name_tfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_name_tfMouseClicked
        if (!this.clearedName) {
            name_tf.setText("");
            this.clearedName = true;
        }
    }//GEN-LAST:event_name_tfMouseClicked

    private void surname_tfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_surname_tfMouseClicked
        if (!this.clearedSurname) {
            surname_tf.setText("");
            this.clearedSurname = true;
        }
    }//GEN-LAST:event_surname_tfMouseClicked

    private void ID_tfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ID_tfMouseClicked
        if (!this.clearedID) {
            ID_tf.setText("");
            this.clearedID = true;
        }
    }//GEN-LAST:event_ID_tfMouseClicked

    private void password_tfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_password_tfMouseClicked
        if (!this.clearedPass) {
            password_tf.setText("");
            this.clearedPass = true;
        }
    }//GEN-LAST:event_password_tfMouseClicked

    private void passConfirm_tfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passConfirm_tfMouseClicked
        if (!this.clearedPassConfirm) {
            passConfirm_tf.setText("");
            this.clearedPassConfirm = true;
        }
    }//GEN-LAST:event_passConfirm_tfMouseClicked

    private void cancel_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_btnActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "¿Estás seguro/a de querer cancelar la registración?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            Main_AdminView.getFrames()[0].setEnabled(true);  // Rehabilita la ventana de abajo
            this.dispose();     // Cierra esta ventana
        }
    }//GEN-LAST:event_cancel_btnActionPerformed

    private void year_tfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_year_tfMouseClicked
        if (!this.clearedYear) {
            year_tf.setText("");
            this.clearedYear = true;
        }
    }//GEN-LAST:event_year_tfMouseClicked

    private void confirm_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirm_btnActionPerformed
        // Comprobar que las contraseñas coincidan

        char[] pass1_ca = this.password_tf.getPassword();
        char[] pass2_ca = this.passConfirm_tf.getPassword();

        if (pass1_ca.length != pass2_ca.length) {
            JOptionPane.showMessageDialog(this,
                    "Las contraseñas introducidas no coinciden. Reintentar.", "Comprobar contraseñas", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String password = "";

        for (int i = 0; i < pass1_ca.length; i++) {
            if (pass1_ca[i] != pass2_ca[i]) {
                JOptionPane.showMessageDialog(this,
                        "Las contraseñas introducidas no coinciden. Reintentar.", "Comprobar contraseñas", JOptionPane.ERROR_MESSAGE);
                return;
            }
            password += pass1_ca[i];
        }

        password = password.strip();

        // El nombre de usuario será el nombre.apellidoID
        String nombre = this.name_tf.getText().replaceAll(" ", "");

        // Eliminamos los accentos
        nombre = Normalizer.normalize(nombre, Normalizer.Form.NFD);
        nombre = nombre.replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");

        String apellidos = this.surname_tf.getText().replaceAll(" ", "");

        apellidos = Normalizer.normalize(apellidos, Normalizer.Form.NFD);
        apellidos = apellidos.replaceAll("[\\p{InCombiningDiacriticalMarks}]", "");

        String username = nombre + "." + apellidos;

        int id;

        // Comprueba si tiene que generarse automaticamente o no
        if (!autoID_checkbox_pressed) {
            try {
                id = Integer.parseInt(this.ID_tf.getText());
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this,
                        "El ID introducido no es válido. Asegúrese de que sea un número entero.", "ID no válido", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Query q = new Query();
            try {
                // Si un usuario con este ID ya existe, avisar
                if (q.userExists(id)) {
                    JOptionPane.showMessageDialog(this,
                            "Ya existe un usuario con este ID.", "ID no válido", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (SQLException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            }

            // Añadimos el ID al final del nombre de usuario y lo hacemos en lowercase
            username += id + "";

        } else {
            // Si no, ponemos el ID a 0
            // A través de un trigger, la BD lo transformará en un NULL, y
            // entonces se activará el AUTO_INCREMENT
            id = 0;
            username += new Random().nextInt(1000) + "";
        }

        username = username.toLowerCase();

        // Guardamos nombre y apellidos
        String name = this.name_tf.getText().strip();
        String surname = this.surname_tf.getText().strip();

        // Guardamos la fecha de nacimiento
        // Le añado 1 al index porque el primer elemento tiene index 0, como es justo que sea
        int day = this.day_cb.getSelectedIndex() + 1;
        int month = this.month_cb.getSelectedIndex() + 1;
        int year;

        // Cogemos el año del TextField y comprobamos si es válido
        try {
            year = Integer.parseInt(this.year_tf.getText());
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this,
                    "El año introducido no es válido. Reintentar.", "Año no válido", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // El año no puede ir más allá del año actual y más atrás del 1900
        if (year > LocalDate.now().getYear() || year < 1900) {
            JOptionPane.showMessageDialog(this,
                    "El año introducido no es válido. Asegúrese de que esté entre 1900 y " + LocalDate.now().getYear() + ".", "Año no válido", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Cogemos el tipo de cuenta
        UserType ut = null;
        switch (this.accountType_cb.getSelectedIndex()) {
            case 0:
                ut = UserType.ADMIN;
                break;
            case 1:
                ut = UserType.TECHNICIAN;
                break;
            case 2:
                ut = UserType.USER;
                break;
        }

        // Ya lo tenemos todo, pedir confirmación al usuario
        int reply = JOptionPane.showConfirmDialog(null, "¿Las informaciones introducidas son correctas?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            String birthDate = "";
            try {
                birthDate = LocalDate.of(year, month, day).format(User.DF);
            } catch (DateTimeException dte) {
                JOptionPane.showMessageDialog(this,
                        "La fecha de nacimiento introducida no es válida. Reintentar.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            System.out.println("DEBUG - Register - Creación de la query");
            Query q = new Query();
            try {
                q.writeUser(id, ut, username, password, name, surname, birthDate);
            } catch (SQLException ex) {
                ex.printStackTrace();
                q.close();
                JOptionPane.showMessageDialog(this,
                        "Error durante de la escritura de los datos a la BD. Reintentar.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } finally {
                q.close();
            }

            JOptionPane.showMessageDialog(this,
                    "La registración ha sido completada con éxito. Username: " + username, "Registración completada", JOptionPane.INFORMATION_MESSAGE);

            this.dispose();
            Main_AdminView.getFrames()[0].setEnabled(true);
        }


    }//GEN-LAST:event_confirm_btnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int reply = JOptionPane.showConfirmDialog(null, "¿Estás seguro/a de querer cancelar la registración?", "Cancelar", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            this.dispose();
            Main_AdminView.getFrames()[0].setEnabled(true);
        }
    }//GEN-LAST:event_formWindowClosing

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                System.out.println("DEBUG - Installed LookAndFeel - " + info.toString() + " (" + info.getClassName() + ")");
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ID_label;
    private javax.swing.JTextField ID_tf;
    private javax.swing.JComboBox<String> accountType_cb;
    private javax.swing.JLabel accountType_label;
    private javax.swing.JLabel alert_icon;
    private javax.swing.JCheckBox autoID_checkbox;
    private javax.swing.JLabel birthdate_label;
    private javax.swing.JButton cancel_btn;
    private javax.swing.JButton confirm_btn;
    private javax.swing.JComboBox<String> day_cb;
    private javax.swing.JLabel day_label;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> month_cb;
    private javax.swing.JLabel month_label;
    private javax.swing.JLabel name_label1;
    private javax.swing.JTextField name_tf;
    private javax.swing.JLabel passConfirm_label;
    private javax.swing.JPasswordField passConfirm_tf;
    private javax.swing.JLabel password_label;
    private javax.swing.JPasswordField password_tf;
    private javax.swing.JLabel surname_label;
    private javax.swing.JTextField surname_tf;
    private javax.swing.JLabel year_label;
    private javax.swing.JTextField year_tf;
    // End of variables declaration//GEN-END:variables
}
